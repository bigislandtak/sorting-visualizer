{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["quickSort","inputArray","arr","slice","animations","swap","left","right","temp","quickSortAuxiliary","index","length","pivot","Math","floor","i","j","push","type","pair","partition","SortingVisualizer","props","state","array","arraySize","speed","algorithm","sorting","min","max","arrayBars","document","getElementsByClassName","style","backgroundColor","this","random","setState","resetArray","SortingAlgorithms","bar1","bar2","setTimeout","tmp_height","height","key","target","val","bar","maxHeapify","len","merge","leftStartIndex","rightStartIndex","resultArray","mergeIndex","leftIndex","rightIndex","sorted","sortedIndex","divide","startIndex","middle","bubbleSort","selectionSort","insertionSort","heapSort","mergeSort","className","Button","id","variant","onClick","disabled","onChange","e","value","step","ToggleButtonGroup","name","defaultValue","ToggleButton","sort","map","idx","width","margin","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gSAuJaA,EAAY,SAAAC,GACvB,IAAMC,EAAMD,EAAWE,QACjBC,EAAa,GAEbC,EAAO,SAACH,EAAKI,EAAMC,GACvB,IAAIC,EAAON,EAAII,GACfJ,EAAII,GAAQJ,EAAIK,GAChBL,EAAIK,GAASC,GAiCf,OAb2B,SAArBC,EAAsBP,EAAKI,EAAMC,GACrC,IAAIG,EAQJ,OAPIR,EAAIS,OAAS,IAEXL,GADJI,EApBc,SAACR,EAAKI,EAAMC,GAC5B,IAAIK,EAAQV,EAAIW,KAAKC,OAAOP,EAAQD,GAAQ,IAAKS,EAAIT,EAAMU,EAAIT,EAE/D,IADAH,EAAWa,KAAK,CAACC,KAAM,SAAUC,KAAM,CAAC,EAAGJ,KACpCA,GAAKC,GAAG,CACb,KAAOd,EAAIa,GAAKH,GACdG,IACF,KAAOb,EAAIc,GAAKJ,GACdI,IACFZ,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACJ,EAAGC,KACrCD,GAAKC,IACPZ,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACJ,EAAGC,KACzCX,EAAKH,EAAKa,IAAKC,MAGnB,OAAOD,EAMGK,CAAUlB,EAAKI,EAAMC,IACV,GACjBE,EAAmBP,EAAKI,EAAMI,EAAQ,GACpCA,EAAQH,GACVE,EAAmBP,EAAKQ,EAAOH,IAE5BL,EAGTO,CAAmBP,EAAK,EAAGA,EAAIS,OAAO,GAC/BP,G,wBC9KYiB,G,mEACpB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,MAAO,GACPC,UAAW,GACXC,MAAO,GACPC,UAAW,SACXC,SAAS,GAPQ,E,yDAclB,IAFA,IA6acC,EAAKC,EA7abN,EAAQ,GACRO,EAAYC,SAASC,uBAAuB,aACzClB,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBAxBA,UAyBpB,IAAK,IAAIpB,EAAI,EAAGA,EAAIqB,KAAKb,MAAME,UAAWV,IACzCS,EAAMP,MAwaOY,EAxaK,GAwaAC,EAxaI,IAyajBjB,KAAKC,MAAMD,KAAKwB,UAAYP,EAAMD,GAAOA,KAxa/CO,KAAKE,SAAS,CACbd,MAAOA,M,0CAKRY,KAAKG,e,mCAML,IAHa,IAAD,OACNnC,ED9CkB,SAAAH,GAGxB,IAFA,IAAMC,EAAMD,EAAWE,QACjBC,EAAa,GACVW,EAAI,EAAGA,EAAIb,EAAIS,OAAQI,IAAK,CACnC,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAIS,OAASI,EAAI,EAAGC,IAEtC,GADAZ,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACH,EAAGA,EAAE,KACvCd,EAAIc,GAAKd,EAAIc,EAAE,GAAI,CACrBZ,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACH,EAAGA,EAAE,KAC3C,IAAMR,EAAON,EAAIc,GACjBd,EAAIc,GAAKd,EAAIc,EAAE,GACfd,EAAIc,EAAE,GAAKR,EAGfJ,EAAWa,KAAK,CAACC,KAAM,SAAUC,KAAM,CAACjB,EAAIS,OAASI,EAAI,EAAGb,EAAIS,UAElE,OAAOP,EC+BYoC,CAA6BJ,KAAKb,MAAMC,OACrDO,EAAYC,SAASC,uBAAuB,aAFtC,WAGHlB,GACR,IAAM0B,EAAOrC,EAAWW,GAAGI,KAAK,GAC1BuB,EAAOtC,EAAWW,GAAGI,KAAK,GACL,SAAvBf,EAAWW,GAAGG,MACjByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA3CJ,UA4ClBJ,EAAUW,GAAMR,MAAMC,gBA5CJ,YA6ChBpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA9CR,UA+CdJ,EAAUW,GAAMR,MAAMC,gBA/CR,YAgDZpB,EAAI,EAAKQ,MAAMG,MAAQ,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBApDL,UAqDjBJ,EAAUW,GAAMR,MAAMC,gBArDL,YAsDfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAEN,SAAvBtB,EAAWW,GAAGG,MACtByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAvDR,UAwDdJ,EAAUW,GAAMR,MAAMC,gBAxDR,YAyDZpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACV,IAAMC,EAAab,EAAUU,GAAMP,MAAMW,OACzCd,EAAUU,GAAMP,MAAMW,OAASd,EAAUW,GAAMR,MAAMW,OACrDd,EAAUW,GAAMR,MAAMW,OAASD,EAC/B,IAAMpC,EAAO,EAAKe,MAAMC,MAAMiB,GAC9B,EAAKlB,MAAMC,MAAMiB,GAAQ,EAAKlB,MAAMC,MAAMkB,GAC1C,EAAKnB,MAAMC,MAAMkB,GAAQlC,IACvBO,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAlEH,UAmEnBJ,EAAUW,GAAMR,MAAMC,gBAnEH,YAoEjBpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA1EL,UA2EjBJ,EAAUW,GAAMR,MAAMC,gBA3EL,YA4EfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAGrCiB,YAAW,WACV,IAAK,IAAI5B,EAAI0B,EAAM1B,EAAI2B,EAAM3B,IAC5BgB,EAAUhB,GAAGmB,MAAMC,gBA5EJ,YA6EdpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QA3C9BX,EAAI,EAAGA,EAAIX,EAAWO,OAAQI,IAAM,EAApCA,GA8CT4B,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBAjFQ,UAkF5B,EAAKG,SAAS,CACbV,SAAS,MAERxB,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,GAAnBU,KAAKb,MAAMG,S,sCAMrD,IAHgB,IAAD,OACTtB,EDtFqB,SAAAH,GAG3B,IAFA,IAAMC,EAAMD,EAAWE,QACjBC,EAAa,GACVW,EAAI,EAAGA,EAAIb,EAAIS,OAAQI,IAAK,CAEnC,IADA,IAAIc,EAAMd,EACDC,EAAID,EAAE,EAAGC,EAAId,EAAIS,OAAQK,IAChCZ,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACU,EAAKb,KACvCd,EAAI2B,GAAO3B,EAAIc,KACjBa,EAAMb,GAEV,GAAIa,IAAQd,EAAG,CACbX,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACJ,EAAGc,KACzC,IAAMrB,EAAON,EAAIa,GACjBb,EAAIa,GAAKb,EAAI2B,GACb3B,EAAI2B,GAAOrB,EAEbJ,EAAWa,KAAK,CAACC,KAAM,SAAUC,KAAM,CAAC,EAAGJ,EAAI,KAEjD,OAAOX,ECoEYoC,CAAgCJ,KAAKb,MAAMC,OACxDO,EAAYC,SAASC,uBAAuB,aAFnC,WAGNlB,GACR,IAAM0B,EAAOrC,EAAWW,GAAGI,KAAK,GAC1BuB,EAAOtC,EAAWW,GAAGI,KAAK,GACL,SAAvBf,EAAWW,GAAGG,MACjByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBArGJ,UAsGlBJ,EAAUW,GAAMR,MAAMC,gBAtGJ,YAuGhBpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAxGR,UAyGdJ,EAAUW,GAAMR,MAAMC,gBAzGR,YA0GZpB,EAAI,EAAKQ,MAAMG,MAAQ,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA9GL,UA+GjBJ,EAAUW,GAAMR,MAAMC,gBA/GL,YAgHfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAEN,SAAvBtB,EAAWW,GAAGG,MACtByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAjHR,UAkHdJ,EAAUW,GAAMR,MAAMC,gBAlHR,YAmHZpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACV,IAAMC,EAAab,EAAUU,GAAMP,MAAMW,OACzCd,EAAUU,GAAMP,MAAMW,OAASd,EAAUW,GAAMR,MAAMW,OACrDd,EAAUW,GAAMR,MAAMW,OAASD,EAC/B,IAAMpC,EAAO,EAAKe,MAAMC,MAAMiB,GAC9B,EAAKlB,MAAMC,MAAMiB,GAAQ,EAAKlB,MAAMC,MAAMkB,GAC1C,EAAKnB,MAAMC,MAAMkB,GAAQlC,IACvBO,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA5HH,UA6HnBJ,EAAUW,GAAMR,MAAMC,gBA7HH,YA8HjBpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBApIL,UAqIjBJ,EAAUW,GAAMR,MAAMC,gBArIL,YAsIfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAGrCiB,YAAW,WACV,IAAK,IAAI5B,EAAI0B,EAAM1B,EAAI2B,EAAM3B,IAC5BgB,EAAUhB,GAAGmB,MAAMC,gBAtIJ,YAuIdpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QA3C9BX,EAAI,EAAGA,EAAIX,EAAWO,OAAQI,IAAM,EAApCA,GA8CT4B,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBA3IQ,UA4I5B,EAAKG,SAAS,CACbV,SAAS,MAERxB,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,GAAnBU,KAAKb,MAAMG,S,sCAMrD,IAHgB,IAAD,OACTtB,ED3HqB,SAAAH,GAG3B,IAFA,IAAMC,EAAMD,EAAWE,QACjBC,EAAa,GACVW,EAAI,EAAGA,EAAIb,EAAIS,OAAQI,IAAK,CAGnC,IAFA,IAAI+B,EAAM5C,EAAIa,GACVC,EAAID,EAAE,EACHC,GAAI,GAAKd,EAAIc,GAAK8B,GACvB1C,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACJ,EAAGC,KACzCZ,EAAWa,KAAK,CAACC,KAAM,OAAQ6B,OAAQ/B,EAAE,EAAGgC,IAAK9C,EAAIc,KACrDd,EAAIc,EAAE,GAAKd,EAAIc,GACfA,GAAM,EAERZ,EAAWa,KAAK,CAACC,KAAM,OAAQ6B,OAAQ/B,EAAE,EAAGgC,IAAKF,IACjD5C,EAAIc,EAAE,GAAK8B,EAEb,OAAO1C,EC4GYoC,CAAgCJ,KAAKb,MAAMC,OACxDO,EAAYC,SAASC,uBAAuB,aAFnC,WAGNlB,GACR,GAA2B,SAAvBX,EAAWW,GAAGG,KAAiB,CAClC,IAAMuB,EAAOrC,EAAWW,GAAGI,KAAK,GAC1BuB,EAAOtC,EAAWW,GAAGI,KAAK,GAChCwB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA/JJ,UAgKlBJ,EAAUW,GAAMR,MAAMC,gBAhKJ,YAiKhBpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAlKR,UAmKdJ,EAAUW,GAAMR,MAAMC,gBAnKR,YAoKZpB,EAAI,EAAKQ,MAAMG,MAAQ,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAxKL,UAyKjBJ,EAAUW,GAAMR,MAAMC,gBAzKL,YA0KfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,WAEjC,CACJ,IAAMuB,EAAM7C,EAAWW,GAAGgC,OAC1BJ,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBA5KP,YA6KZpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMW,OAASzC,EAAWW,GAAGiC,IAAM,KAClD,EAAKzB,MAAMC,MAAMyB,GAAO7C,EAAWW,GAAGiC,MACpCjC,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBAlLF,YAmLjBpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBAzLJ,YA0LfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,SA/B9BX,EAAI,EAAGA,EAAIX,EAAWO,OAAQI,IAAM,EAApCA,GAkCT4B,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBA1LF,YA2LhB/B,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,EAAnBU,KAAKb,MAAMG,OACrDiB,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBA7LQ,UA8L5B,EAAKG,SAAS,CACbV,SAAS,MAERxB,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,GAAnBU,KAAKb,MAAMG,S,iCAMrD,IAHW,IAAD,OACJtB,ED3JgB,SAAAH,GA8BtB,IA7BA,IAAMC,EAAMD,EAAWE,QACjBC,EAAa,GAEbC,EAAO,SAACH,EAAKI,EAAMC,GACvB,IAAIC,EAAON,EAAII,GACfJ,EAAII,GAAQJ,EAAIK,GAChBL,EAAIK,GAASC,GAGT0C,EAAa,SAAbA,EAAchD,EAAKa,GACvB,IAAMT,EAAO,EAAIS,EAAI,EACfR,EAAQ,EAAIQ,EAAI,EAClBe,EAAMf,EACNT,EAAO6C,GACT/C,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACb,EAAMwB,KAC1CxB,EAAO6C,GAAOjD,EAAII,GAAQJ,EAAI4B,KAChCA,EAAMxB,GACJC,EAAQ4C,GACV/C,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACZ,EAAOuB,KAC3CvB,EAAQ4C,GAAOjD,EAAIK,GAASL,EAAI4B,KAClCA,EAAMvB,GACJuB,IAAQf,IACVX,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAACJ,EAAGe,KACzCzB,EAAKH,EAAKa,EAAGe,GACboB,EAAWhD,EAAK4B,KAIhBqB,EAAMjD,EAAIS,OACLI,EAAIF,KAAKC,MAAMqC,EAAM,GAAIpC,GAAK,EAAGA,IACxCmC,EAAWhD,EAAKa,GAClB,IAAK,IAAIA,EAAIoC,EAAM,EAAGpC,EAAI,EAAGA,IAC3BX,EAAWa,KAAK,CAACC,KAAM,OAAQC,KAAM,CAAC,EAAGJ,KACzCV,EAAKH,EAAK,EAAGa,GACbX,EAAWa,KAAK,CAACC,KAAM,SAAUC,KAAM,CAACJ,EAAGb,EAAIS,UAC/CwC,IACAD,EAAWhD,EAAK,GAElB,OAAOE,ECoHYoC,CAA2BJ,KAAKb,MAAMC,OACnDO,EAAYC,SAASC,uBAAuB,aAFxC,WAGDlB,GACR,IAAM0B,EAAOrC,EAAWW,GAAGI,KAAK,GAC1BuB,EAAOtC,EAAWW,GAAGI,KAAK,GACL,SAAvBf,EAAWW,GAAGG,MACjByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAjNJ,UAkNlBJ,EAAUW,GAAMR,MAAMC,gBAlNJ,YAmNhBpB,EAAI,EAAKQ,MAAMG,MAAQ,GAC1BiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBApNR,UAqNdJ,EAAUW,GAAMR,MAAMC,gBArNR,YAsNZpB,EAAI,EAAKQ,MAAMG,MAAQ,EAAI,EAAKH,MAAMG,OACzCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA1NL,UA2NjBJ,EAAUW,GAAMR,MAAMC,gBA3NL,YA4NfpB,EAAI,EAAKQ,MAAMG,MAAQ,EAAuB,EAAnB,EAAKH,MAAMG,QAEV,SAAvBtB,EAAWW,GAAGG,MACtByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA7NR,UA8NdJ,EAAUW,GAAMR,MAAMC,gBA9NR,YA+NZpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACV,IAAMC,EAAab,EAAUU,GAAMP,MAAMW,OACzCd,EAAUU,GAAMP,MAAMW,OAASd,EAAUW,GAAMR,MAAMW,OACrDd,EAAUW,GAAMR,MAAMW,OAASD,EAC/B,IAAMpC,EAAO,EAAKe,MAAMC,MAAMiB,GAC9B,EAAKlB,MAAMC,MAAMiB,GAAQ,EAAKlB,MAAMC,MAAMkB,GAC1C,EAAKnB,MAAMC,MAAMkB,GAAQlC,IACvBO,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAxOH,UAyOnBJ,EAAUW,GAAMR,MAAMC,gBAzOH,YA0OjBpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAhPL,UAiPjBJ,EAAUW,GAAMR,MAAMC,gBAjPL,YAkPfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAGrCiB,YAAW,WACV,IAAK,IAAI5B,EAAI0B,EAAM1B,EAAI2B,EAAM3B,IAC5BgB,EAAUhB,GAAGmB,MAAMC,gBAlPJ,YAmPdpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QA3C9BX,EAAI,EAAGA,EAAIX,EAAWO,OAAQI,IAAM,EAApCA,GA8CT4B,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBAvPQ,UAwP5B,EAAKG,SAAS,CACbV,SAAS,MAERxB,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,GAAnBU,KAAKb,MAAMG,S,kCAMrD,IAHY,IAAD,OACLtB,ED3KiB,SAACH,GACxB,IAAMG,EAAa,GAEbgD,EAAQ,SAAC9C,EAAMC,EAAO8C,EAAgBC,GAE1C,IADA,IAAIC,EAAc,GAAIC,EAAaH,EAAgBI,EAAY,EAAGC,EAAa,EACxED,EAAYnD,EAAKK,QAAU+C,EAAanD,EAAMI,QACnDP,EAAWa,KAAK,CAACC,KAAM,OAAQR,MAAO4C,EAAkBI,IACpDpD,EAAKmD,GAAalD,EAAMmD,IACH,IAAnBL,GAAwBC,IAAoBzC,KAAKC,MAAMb,EAAWU,OAAS,GAC7EP,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAMC,YAAaJ,EAAYR,IAAK1C,EAAKmD,GAAY/C,MAAO8C,MAErGpD,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAOX,IAAK1C,EAAKmD,GAAY/C,MAAO8C,MAC/ED,EAAYtC,KAAKX,EAAKmD,QAGC,IAAnBJ,GAAwBC,IAAoBzC,KAAKC,MAAMb,EAAWU,OAAS,GAC7EP,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAMC,YAAaJ,EAAYR,IAAKzC,EAAMmD,GAAahD,MAAO8C,MAEvGpD,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAOX,IAAKzC,EAAMmD,GAAahD,MAAO8C,MACjFD,EAAYtC,KAAKV,EAAMmD,OAG3B,KAAOD,EAAYnD,EAAKK,QACC,IAAnB0C,GAAwBC,IAAoBzC,KAAKC,MAAMb,EAAWU,OAAS,GAC7EP,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAMC,YAAaJ,EAAYR,IAAK1C,EAAKmD,GAAY/C,MAAO8C,MAErGpD,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAOX,IAAK1C,EAAKmD,GAAY/C,MAAO8C,MAC/ED,EAAYtC,KAAKX,EAAKmD,MAExB,KAAOC,EAAanD,EAAMI,QACD,IAAnB0C,GAAwBC,IAAoBzC,KAAKC,MAAMb,EAAWU,OAAS,GAC7EP,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAMC,YAAaJ,EAAYR,IAAKzC,EAAMmD,GAAahD,MAAO8C,MAEvGpD,EAAWa,KAAK,CAACC,KAAM,SAAUyC,QAAQ,EAAOX,IAAKzC,EAAMmD,GAAahD,MAAO8C,MACjFD,EAAYtC,KAAKV,EAAMmD,MAEzB,OAAOH,GAaT,OAVe,SAATM,EAAU5D,EAAY6D,GAC1B,GAAI7D,EAAWU,QAAU,EACvB,OAAOV,EACT,IAAM8D,EAASlD,KAAKC,MAAMb,EAAWU,OAAS,GACxCL,EAAOL,EAAWE,MAAM,EAAG4D,GAC3BxD,EAAQN,EAAWE,MAAM4D,GAC/B,OAAOX,EAAMS,EAAOvD,EAAMwD,GAAaD,EAAOtD,EAAOuD,EAAaC,GAASD,EAAYA,EAAaC,GAGtGF,CAAO5D,EAAY,GACZG,EC0HYoC,CAA4BJ,KAAKb,MAAMC,OACpDO,EAAYC,SAASC,uBAAuB,aAFvC,WAGFlB,GACR,IAAMkC,EAAM7C,EAAWW,GAAGL,MACC,SAAvBN,EAAWW,GAAGG,MACjByB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBA1QH,YA2QhBpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBA5QP,YA6QZpB,EAAI,EAAKQ,MAAMG,MAAQ,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBAjRJ,YAkRfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAEN,WAAvBtB,EAAWW,GAAGG,OACtByB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBAnRP,YAoRZpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMW,OAASzC,EAAWW,GAAGiC,IAAM,KAClD,EAAKzB,MAAMC,MAAMyB,GAAO7C,EAAWW,GAAGiC,MACpCjC,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUkB,GAAKf,MAAMC,gBAzRF,YA0RjBpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACNvC,EAAWW,GAAG4C,OACjB5B,EAAUkB,GAAKf,MAAMC,gBA5RN,UA8RfJ,EAAUkB,GAAKf,MAAMC,gBAnSL,YAoSfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,SA7B9BX,EAAI,EAAGA,EAAIX,EAAWO,OAAQI,IAAM,EAApCA,GAgCT4B,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBAnSQ,UAoS5B,EAAKG,SAAS,CACbV,SAAS,MAERxB,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,GAAnBU,KAAKb,MAAMG,S,kCAMrD,IAHY,IAAD,OACLtB,EAAaoC,EAA4BJ,KAAKb,MAAMC,OACpDO,EAAYC,SAASC,uBAAuB,aAFvC,WAGFlB,GACR,IAAM0B,EAAOrC,EAAWW,GAAGI,KAAK,GAC1BuB,EAAOtC,EAAWW,GAAGI,KAAK,GACL,SAAvBf,EAAWW,GAAGG,MACjByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAvTJ,UAwTlBJ,EAAUW,GAAMR,MAAMC,gBAxTJ,YAyThBpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA1TR,UA2TdJ,EAAUW,GAAMR,MAAMC,gBA3TR,YA4TZpB,EAAI,EAAKQ,MAAMG,MAAQ,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAhUL,UAiUjBJ,EAAUW,GAAMR,MAAMC,gBAjUL,YAkUfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAEN,SAAvBtB,EAAWW,GAAGG,MACtByB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAnUR,UAoUdJ,EAAUW,GAAMR,MAAMC,gBApUR,YAqUZpB,EAAI,EAAKQ,MAAMG,OAClBiB,YAAW,WACV,IAAMC,EAAab,EAAUU,GAAMP,MAAMW,OACzCd,EAAUU,GAAMP,MAAMW,OAASd,EAAUW,GAAMR,MAAMW,OACrDd,EAAUW,GAAMR,MAAMW,OAASD,EAC/B,IAAMpC,EAAO,EAAKe,MAAMC,MAAMiB,GAC9B,EAAKlB,MAAMC,MAAMiB,GAAQ,EAAKlB,MAAMC,MAAMkB,GAC1C,EAAKnB,MAAMC,MAAMkB,GAAQlC,IACvBO,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBA9UH,UA+UnBJ,EAAUW,GAAMR,MAAMC,gBA/UH,YAgVjBpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,OACrCiB,YAAW,WACVZ,EAAUU,GAAMP,MAAMC,gBAtVL,UAuVjBJ,EAAUW,GAAMR,MAAMC,gBAvVL,YAwVfpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QAGrCiB,YAAW,WACV,IAAK,IAAI5B,EAAI0B,EAAM1B,EAAI2B,EAAM3B,IAC5BgB,EAAUhB,GAAGmB,MAAMC,gBAxVJ,YAyVdpB,EAAI,EAAKQ,MAAMG,MAA2B,EAAnB,EAAKH,MAAMG,QA3C9BX,EAAI,EAAGA,EAAIX,EAAWO,OAAQI,IAAM,EAApCA,GA8CT4B,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBA9VF,YA+VhB/B,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,EAAnBU,KAAKb,MAAMG,OACrDiB,YAAW,WACV,IAAK,IAAI5B,EAAI,EAAGA,EAAIgB,EAAUpB,OAAQI,IACrCgB,EAAUhB,GAAGmB,MAAMC,gBAjWQ,UAkW5B,EAAKG,SAAS,CACbV,SAAS,MAERxB,EAAWO,OAASyB,KAAKb,MAAMG,MAA2B,GAAnBU,KAAKb,MAAMG,S,6BAIrDU,KAAKE,SAAS,CACbV,SAAS,IAEmB,WAAzBQ,KAAKb,MAAMI,UACdS,KAAK4B,aAC4B,cAAzB5B,KAAKb,MAAMI,UACnBS,KAAK6B,gBAC4B,cAAzB7B,KAAKb,MAAMI,UACnBS,KAAK8B,gBAC4B,SAAzB9B,KAAKb,MAAMI,UACnBS,KAAK+B,WAC4B,UAAzB/B,KAAKb,MAAMI,UACnBS,KAAKgC,YAELhC,KAAKpC,c,+BAGG,IAAD,OACFwB,EAAQY,KAAKb,MAAMC,MAAMrB,QAc/B,OACC,yBAAKkE,UAAU,OACd,yBAAKA,UAAU,iBACd,yBAAKA,UAAU,gBACd,kBAACC,EAAA,EAAD,CAAQC,GAAG,mBAAmBC,QAAQ,kBAAkBC,QAAS,kBAAM,EAAKlC,cAAcmC,SAAUtC,KAAKb,MAAMK,SAA/G,kBAED,yBAAKyC,UAAU,gBACX,2BACEE,GAAG,eACHrD,KAAK,QACLW,IAAI,KAAKC,IAAI,MAEb6C,SAAU,SAAAC,GAAC,OAxBMC,EAwBeD,EAAE7B,OAAO8B,MAvBjD,EAAKtD,MAAME,UAAYoD,EACvB,EAAKtD,MAAMG,MAAQ,IAAOmD,OAC1B,EAAKtC,aAHmB,IAACsC,GAyBjBC,KAAK,IACLJ,SAAUtC,KAAKb,MAAMK,WAG3B,yBAAKyC,UAAU,gBACd,kBAACU,EAAA,EAAD,CAAmB7D,KAAK,QAAQ8D,KAAK,aAAaL,SAxB7B,SAACE,GACzB,EAAKvC,SAAS,CACbX,UAAWkD,KAsBqEI,aAAc,UAC3F,kBAACC,EAAA,EAAD,CAAcb,UAAU,gBAAgBQ,MAAO,UAA/C,eACA,kBAACK,EAAA,EAAD,CAAcb,UAAU,gBAAgBQ,MAAO,aAA/C,kBACA,kBAACK,EAAA,EAAD,CAAcb,UAAU,gBAAgBQ,MAAO,aAA/C,kBACA,kBAACK,EAAA,EAAD,CAAcb,UAAU,gBAAgBQ,MAAO,QAA/C,aACA,kBAACK,EAAA,EAAD,CAAcb,UAAU,gBAAgBQ,MAAO,SAA/C,cACD,kBAACK,EAAA,EAAD,CAAcb,UAAU,gBAAgBQ,MAAO,SAA/C,gBAGD,yBAAKR,UAAU,gBACd,kBAACC,EAAA,EAAD,CAAQC,GAAG,cAAcC,QAAQ,UAAUC,QAAS,kBAAM,EAAKU,QAAQT,SAAUtC,KAAKb,MAAMK,SAA5F,WAIF,yBAAKyC,UAAU,WACb7C,EAAM4D,KAAI,SAACpC,EAAKqC,GAAN,OACV,yBACChB,UAAU,YACVvB,IAAKuC,EACLnD,MAAO,CACNC,gBArbc,UAsbdU,OAAQG,EAAM,KACdsC,MAAO,IAAM,EAAK/D,MAAME,UAAY,KACpC8D,OAAQ,IAAM,EAAKhE,MAAME,UAAY,iB,GAhbE+D,IAAMC,YCLtCC,MARf,WACE,OACE,yBAAKrB,UAAU,OACb,kBAAC,EAAD,QCKcsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlE,SAASmE,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.b94cd819.chunk.js","sourcesContent":["export const bubbleSort = inputArray => {\n  const arr = inputArray.slice();\n  const animations = [];\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      animations.push({type: 'scan', pair: [j, j+1]});\n      if (arr[j] > arr[j+1]) {\n        animations.push({type: 'swap', pair: [j, j+1]});\n        const temp = arr[j];\n        arr[j] = arr[j+1];\n        arr[j+1] = temp;\n      }\n    }\n    animations.push({type: 'sorted', pair: [arr.length - i - 1, arr.length]});\n  }\n  return animations;\n};\n\nexport const selectionSort = inputArray => {\n  const arr = inputArray.slice();\n  const animations = [];\n  for (let i = 0; i < arr.length; i++) {\n    let min = i;\n    for (let j = i+1; j < arr.length; j++) {\n      animations.push({type: 'scan', pair: [min, j]});\n      if (arr[min] > arr[j])\n        min = j;\n    }\n    if (min !== i) {\n      animations.push({type: 'swap', pair: [i, min]});\n      const temp = arr[i];\n      arr[i] = arr[min];\n      arr[min] = temp;\n    }\n    animations.push({type: 'sorted', pair: [0, i + 1]});\n  }\n  return animations;\n}\n\nexport const insertionSort = inputArray => {\n  const arr = inputArray.slice();\n  const animations = [];\n  for (let i = 1; i < arr.length; i++) {\n    let key = arr[i];\n    let j = i-1;\n    while (j >=0 && arr[j] > key) {\n      animations.push({type: 'scan', pair: [i, j]});\n      animations.push({type: 'copy', target: j+1, val: arr[j]});\n      arr[j+1] = arr[j];\n      j = j-1;\n    }\n    animations.push({type: 'copy', target: j+1, val: key});\n    arr[j+1] = key;\n  }\n  return animations;\n}\n\nexport const heapSort = inputArray => {\n  const arr = inputArray.slice();\n  const animations = [];\n\n  const swap = (arr, left, right) => {\n    var temp = arr[left];\n    arr[left] = arr[right];\n    arr[right] = temp;\n  };\n\n  const maxHeapify = (arr, i) => {\n    const left = 2 * i + 1;\n    const right = 2 * i + 2;\n    let max = i;\n    if (left < len)\n      animations.push({type: 'scan', pair: [left, max]});\n    if (left < len && arr[left] > arr[max])\n      max = left;\n    if (right < len)\n      animations.push({type: 'scan', pair: [right, max]});\n    if (right < len && arr[right] > arr[max])\n      max = right;\n    if (max !== i) {\n      animations.push({type: 'swap', pair: [i, max]});\n      swap(arr, i, max);\n      maxHeapify(arr, max);\n    }\n  };\n\n  let len = arr.length;\n  for (let i = Math.floor(len / 2); i >= 0; i--)\n    maxHeapify(arr, i);\n  for (let i = len - 1; i > 0; i--) {\n    animations.push({type: 'swap', pair: [0, i]});\n    swap(arr, 0, i);\n    animations.push({type: 'sorted', pair: [i, arr.length]});\n    len--;\n    maxHeapify(arr, 0);\n  }\n  return animations;\n}\n\nexport const mergeSort = (inputArray) => {\n  const animations = [];\n\n  const merge = (left, right, leftStartIndex, rightStartIndex) => {\n    let resultArray = [], mergeIndex = leftStartIndex, leftIndex = 0, rightIndex = 0;\n    while (leftIndex < left.length && rightIndex < right.length) {\n      animations.push({type: 'scan', index: rightStartIndex + rightIndex});\n      if (left[leftIndex] < right[rightIndex]) {\n        if (leftStartIndex === 0 && rightStartIndex === Math.floor(inputArray.length / 2))\n          animations.push({type: 'insert', sorted: true, sortedIndex: mergeIndex, val: left[leftIndex], index: mergeIndex++});\n        else\n          animations.push({type: 'insert', sorted: false, val: left[leftIndex], index: mergeIndex++});\n        resultArray.push(left[leftIndex++]);\n      }\n      else {\n        if (leftStartIndex === 0 && rightStartIndex === Math.floor(inputArray.length / 2))\n          animations.push({type: 'insert', sorted: true, sortedIndex: mergeIndex, val: right[rightIndex], index: mergeIndex++});\n        else\n          animations.push({type: 'insert', sorted: false, val: right[rightIndex], index: mergeIndex++});\n        resultArray.push(right[rightIndex++]);\n      }\n    }\n    while (leftIndex < left.length) {\n      if (leftStartIndex === 0 && rightStartIndex === Math.floor(inputArray.length / 2))\n        animations.push({type: 'insert', sorted: true, sortedIndex: mergeIndex, val: left[leftIndex], index: mergeIndex++});\n      else\n        animations.push({type: 'insert', sorted: false, val: left[leftIndex], index: mergeIndex++});\n      resultArray.push(left[leftIndex++]);\n    }\n    while (rightIndex < right.length) {\n      if (leftStartIndex === 0 && rightStartIndex === Math.floor(inputArray.length / 2))\n        animations.push({type: 'insert', sorted: true, sortedIndex: mergeIndex, val: right[rightIndex], index: mergeIndex++});\n      else\n        animations.push({type: 'insert', sorted: false, val: right[rightIndex], index: mergeIndex++});\n      resultArray.push(right[rightIndex++]);\n    }\n    return resultArray;\n  };\n\n  const divide = (inputArray, startIndex) => {\n    if (inputArray.length <= 1)\n      return inputArray;\n    const middle = Math.floor(inputArray.length / 2);\n    const left = inputArray.slice(0, middle);\n    const right = inputArray.slice(middle);\n    return merge(divide(left, startIndex), divide(right, startIndex + middle), startIndex, startIndex + middle);\n  };\n\n  divide(inputArray, 0);\n  return animations;\n}\n\nexport const quickSort = inputArray => {\n  const arr = inputArray.slice();\n  const animations = [];\n\n  const swap = (arr, left, right) => {\n    var temp = arr[left];\n    arr[left] = arr[right];\n    arr[right] = temp;\n  }\n\n  const partition = (arr, left, right) => {\n    var pivot = arr[Math.floor((right + left) / 2)], i = left, j = right;\n    animations.push({type: 'sorted', pair: [0, i]});\n    while (i <= j) {\n      while (arr[i] < pivot)\n        i++;\n      while (arr[j] > pivot)\n        j--;\n      animations.push({type: 'scan', pair: [i, j]});\n      if (i <= j) {\n        animations.push({type: 'swap', pair: [i, j]});\n        swap(arr, i++, j--);\n      }\n    }\n    return i;\n  }\n\n  const quickSortAuxiliary = (arr, left, right) => {\n    var index;\n    if (arr.length > 1) {\n      index = partition(arr, left, right);\n      if (left < index - 1)\n        quickSortAuxiliary(arr, left, index - 1);\n      if (index < right)\n        quickSortAuxiliary(arr, index, right);\n    }\n    return arr;\n  }\n\n  quickSortAuxiliary(arr, 0, arr.length-1, animations);\n  return animations;\n}\n","import React from 'react';\nimport * as SortingAlgorithms from '../SortingAlgorithms/SortingAlgorithms.js';\n\nimport { Button, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\n\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './SortingVisualizer.css';\n\nconst PRIMARY_COLOR = '#9da0b0';\nconst PRE_SCAN_COLOR = '#c4c3a1';\nconst SCAN_COLOR = '#d4d17f';\nconst SWAP_COLOR = '#4cba27';\nconst POST_SWAP_COLOR = '#8ba384';\nconst SORTED_COLOR = '#bd848b';\nconst SORTING_COMPLETE_COLOR = '#82997c';\n\nexport default class SortingVisualizer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tarray: [],\n\t\t\tarraySize: 50,\n\t\t\tspeed: 20,\n\t\t\talgorithm: 'bubble',\n\t\t\tsorting: false,\n\t\t};\n\t}\n\n\tresetArray() {\n\t\tconst array = [];\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\tarrayBars[i].style.backgroundColor = PRIMARY_COLOR;\n\t\tfor (let i = 0; i < this.state.arraySize; i++)\n\t\t\tarray.push(random(10, 500));\n\t\tthis.setState({\n\t\t\tarray: array,\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.resetArray();\n\t}\n\n\tbubbleSort() {\n\t\tconst animations = SortingAlgorithms.bubbleSort(this.state.array);\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst bar1 = animations[i].pair[0];\n\t\t\tconst bar2 = animations[i].pair[1];\n\t\t\tif (animations[i].type === 'scan') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t}\n\t\t\telse if (animations[i].type === 'swap') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst tmp_height = arrayBars[bar1].style.height;\n\t\t\t\t\tarrayBars[bar1].style.height = arrayBars[bar2].style.height;\n\t\t\t\t\tarrayBars[bar2].style.height = tmp_height;\n\t\t\t\t\tconst temp = this.state.array[bar1];\n\t\t\t\t\tthis.state.array[bar1] = this.state.array[bar2];\n\t\t\t\t\tthis.state.array[bar2] = temp;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 4);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tfor (let i = bar1; i < bar2; i++)\n\t\t\t\t\t\tarrayBars[i].style.backgroundColor = SORTED_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTING_COMPLETE_COLOR;\n\t\t\tthis.setState({\n\t\t\t\tsorting: false,\n\t\t\t});\n\t\t}, animations.length * this.state.speed + this.state.speed * 10);\n\t}\n\n\tselectionSort() {\n\t\tconst animations = SortingAlgorithms.selectionSort(this.state.array);\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst bar1 = animations[i].pair[0];\n\t\t\tconst bar2 = animations[i].pair[1];\n\t\t\tif (animations[i].type === 'scan') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t}\n\t\t\telse if (animations[i].type === 'swap') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst tmp_height = arrayBars[bar1].style.height;\n\t\t\t\t\tarrayBars[bar1].style.height = arrayBars[bar2].style.height;\n\t\t\t\t\tarrayBars[bar2].style.height = tmp_height;\n\t\t\t\t\tconst temp = this.state.array[bar1];\n\t\t\t\t\tthis.state.array[bar1] = this.state.array[bar2];\n\t\t\t\t\tthis.state.array[bar2] = temp;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 4);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tfor (let i = bar1; i < bar2; i++)\n\t\t\t\t\t\tarrayBars[i].style.backgroundColor = SORTED_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTING_COMPLETE_COLOR;\n\t\t\tthis.setState({\n\t\t\t\tsorting: false,\n\t\t\t});\n\t\t}, animations.length * this.state.speed + this.state.speed * 10);\n\t}\n\n\tinsertionSort() {\n\t\tconst animations = SortingAlgorithms.insertionSort(this.state.array);\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tif (animations[i].type === 'scan') {\n\t\t\t\tconst bar1 = animations[i].pair[0];\n\t\t\t\tconst bar2 = animations[i].pair[1];\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst bar = animations[i].target;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.height = animations[i].val + 'px';\n\t\t\t\t\tthis.state.array[bar] = animations[i].val;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 4);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTED_COLOR;\n\t\t}, animations.length * this.state.speed + this.state.speed * 6);\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTING_COMPLETE_COLOR;\n\t\t\tthis.setState({\n\t\t\t\tsorting: false,\n\t\t\t});\n\t\t}, animations.length * this.state.speed + this.state.speed * 10);\n\t}\n\n\theapSort() {\n\t\tconst animations = SortingAlgorithms.heapSort(this.state.array);\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst bar1 = animations[i].pair[0];\n\t\t\tconst bar2 = animations[i].pair[1];\n\t\t\tif (animations[i].type === 'scan') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed / 2);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed / 2 + this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed / 2 + this.state.speed * 2);\n\t\t\t}\n\t\t\telse if (animations[i].type === 'swap') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst tmp_height = arrayBars[bar1].style.height;\n\t\t\t\t\tarrayBars[bar1].style.height = arrayBars[bar2].style.height;\n\t\t\t\t\tarrayBars[bar2].style.height = tmp_height;\n\t\t\t\t\tconst temp = this.state.array[bar1];\n\t\t\t\t\tthis.state.array[bar1] = this.state.array[bar2];\n\t\t\t\t\tthis.state.array[bar2] = temp;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 4);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tfor (let i = bar1; i < bar2; i++)\n\t\t\t\t\t\tarrayBars[i].style.backgroundColor = SORTED_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTING_COMPLETE_COLOR;\n\t\t\tthis.setState({\n\t\t\t\tsorting: false,\n\t\t\t});\n\t\t}, animations.length * this.state.speed + this.state.speed * 10);\n\t}\n\n\tmergeSort() {\n\t\tconst animations = SortingAlgorithms.mergeSort(this.state.array);\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst bar = animations[i].index;\n\t\t\tif (animations[i].type === 'scan') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t}\n\t\t\telse if (animations[i].type === 'insert'){\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.height = animations[i].val + 'px';\n\t\t\t\t\tthis.state.array[bar] = animations[i].val;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 4);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (animations[i].sorted)\n\t\t\t\t\t\tarrayBars[bar].style.backgroundColor = SORTED_COLOR;\n\t\t\t\t\telse\n\t\t\t\t\t\tarrayBars[bar].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTING_COMPLETE_COLOR;\n\t\t\tthis.setState({\n\t\t\t\tsorting: false,\n\t\t\t});\n\t\t}, animations.length * this.state.speed + this.state.speed * 10);\n\t}\n\n\tquickSort() {\n\t\tconst animations = SortingAlgorithms.quickSort(this.state.array);\n\t\tconst arrayBars = document.getElementsByClassName('array-bar');\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tconst bar1 = animations[i].pair[0];\n\t\t\tconst bar2 = animations[i].pair[1];\n\t\t\tif (animations[i].type === 'scan') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRE_SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SCAN_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t}\n\t\t\telse if (animations[i].type === 'swap') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst tmp_height = arrayBars[bar1].style.height;\n\t\t\t\t\tarrayBars[bar1].style.height = arrayBars[bar2].style.height;\n\t\t\t\t\tarrayBars[bar2].style.height = tmp_height;\n\t\t\t\t\tconst temp = this.state.array[bar1];\n\t\t\t\t\tthis.state.array[bar1] = this.state.array[bar2];\n\t\t\t\t\tthis.state.array[bar2] = temp;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 2);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = POST_SWAP_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 4);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tarrayBars[bar1].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t\tarrayBars[bar2].style.backgroundColor = PRIMARY_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tfor (let i = bar1; i < bar2; i++)\n\t\t\t\t\t\tarrayBars[i].style.backgroundColor = SORTED_COLOR;\n\t\t\t\t}, i * this.state.speed + this.state.speed * 6);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTED_COLOR;\n\t\t}, animations.length * this.state.speed + this.state.speed * 6);\n\t\tsetTimeout(() => {\n\t\t\tfor (let i = 0; i < arrayBars.length; i++)\n\t\t\t\tarrayBars[i].style.backgroundColor = SORTING_COMPLETE_COLOR;\n\t\t\tthis.setState({\n\t\t\t\tsorting: false,\n\t\t\t});\n\t\t}, animations.length * this.state.speed + this.state.speed * 10);\n\t}\n\n\tsort() {\n\t\tthis.setState({\n\t\t\tsorting: true,\n\t\t});\n\t\tif (this.state.algorithm === 'bubble')\n\t\t\tthis.bubbleSort();\n\t\telse if (this.state.algorithm === 'selection')\n\t\t\tthis.selectionSort();\n\t\telse if (this.state.algorithm === 'insertion')\n\t\t\tthis.insertionSort();\n\t\telse if (this.state.algorithm === 'heap')\n\t\t\tthis.heapSort();\n\t\telse if (this.state.algorithm === 'merge')\n\t\t\tthis.mergeSort();\n\t\telse\n\t\t\tthis.quickSort();\n\t}\n\n\trender() {\n\t\tconst array = this.state.array.slice();\n\n\t\tconst handleSizeChange = (value) => {\n\t\t\tthis.state.arraySize = value;\n\t\t\tthis.state.speed = 1000 / value;\n\t\t\tthis.resetArray();\n\t\t}\n\n\t\tconst handleAlgoChange = (value) => {\n\t\t\tthis.setState({\n\t\t\t\talgorithm: value,\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t<div className='control-panel'>\n\t\t\t\t\t<div className='control-part'>\n\t\t\t\t\t\t<Button id='new-array-button' variant='outline-primary' onClick={() => this.resetArray()} disabled={this.state.sorting}>Refresh array</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='control-part'>\n\t\t\t\t\t    <input \n\t\t\t\t\t      id=\"array-slider\" \n\t\t\t\t\t      type=\"range\" \n\t\t\t\t\t      min=\"25\" max=\"200\" \n\t\t\t\t\t      //value={this.state.arraySize} \n\t\t\t\t\t      onChange={e => handleSizeChange(e.target.value)}\n\t\t\t\t\t      step=\"5\"\n\t\t\t\t\t      disabled={this.state.sorting}\n\t\t\t\t\t    />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='control-part'>\n\t\t\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"algorithms\" onChange={handleAlgoChange} defaultValue={'bubble'}>\n\t\t\t\t\t\t\t<ToggleButton className='toggle-button' value={'bubble'}>Bubble Sort</ToggleButton>\n\t\t\t\t\t\t\t<ToggleButton className='toggle-button' value={'selection'}>Selection Sort</ToggleButton>\n\t\t\t\t\t\t\t<ToggleButton className='toggle-button' value={'insertion'}>Insertion Sort</ToggleButton>\n\t\t\t\t\t\t\t<ToggleButton className='toggle-button' value={'heap'}>Heap Sort</ToggleButton>\n\t\t\t\t\t\t\t<ToggleButton className='toggle-button' value={'merge'}>Merge Sort</ToggleButton>\n\t\t\t\t\t\t<ToggleButton className='toggle-button' value={'quick'}>Quick Sort</ToggleButton>\n\t\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='control-part'>\n\t\t\t\t\t\t<Button id='sort-button' variant='success' onClick={() => this.sort()} disabled={this.state.sorting}>Sort!</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='display'>\n\t\t\t\t\t{array.map((val, idx) =>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='array-bar'\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: PRIMARY_COLOR,\n\t\t\t\t\t\t\t\theight: val + 'px',\n\t\t\t\t\t\t\t\twidth: 880 / this.state.arraySize + 'px',\n\t\t\t\t\t\t\t\tmargin: 100 / this.state.arraySize + 'px',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction random(min, max) {\n\treturn Math.floor(Math.random() * (max - min) + min);\n}\n\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}